<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="NIBLP1245" failures="5" tests="21" name="Test" time="146.395" errors="0" timestamp="2023-07-26T23:41:47 IST">
  <testcase classname="lumaTestCases.SearchProduct" name="@BeforeMethod launchTheURL" time="5.212">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at com.LumaMagento.Base.Base.loginToApplication(Base.java:135)
at lumaTestCases.SearchProduct.launchTheURL(SearchProduct.java:29)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.SearchProduct" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.SearchProduct" name="@BeforeMethod launchTheURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.SearchProduct" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Category" name="@BeforeMethod launchTheURL" time="4.848">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at com.LumaMagento.Base.Base.loginToApplication(Base.java:135)
at lumaTestCases.Category.launchTheURL(Category.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.Category" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Category" name="@BeforeMethod launchTheURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.Category" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Category" name="@BeforeMethod launchTheURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.Category" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Category" name="@BeforeMethod launchTheURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.Category" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Category" name="@BeforeMethod launchTheURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchTheURL -->
  <testcase classname="lumaTestCases.Category" name="@AfterMethod closeDriver" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod closeDriver -->
  <testcase classname="lumaTestCases.Registration" name="Register002_createAccountwithoutdata" time="3.655"/>
  <testcase classname="lumaTestCases.Registration" name="Register003_registerExistingUser" time="6.469"/>
  <testcase classname="lumaTestCases.Registration" name="Register005_validateStrongPassword" time="1.633"/>
  <testcase classname="lumaTestCases.Registration" name="Register006_validateWeakPasswordAndRegister" time="1.458">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at lumaTestCases.Registration.Register006_validateWeakPasswordAndRegister(Registration.java:117)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Register006_validateWeakPasswordAndRegister -->
  <testcase classname="lumaTestCases.Registration" name="Register007_validatePasswordCritera" time="1.411">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at lumaTestCases.Registration.Register007_validatePasswordCritera(Registration.java:130)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Register007_validatePasswordCritera -->
  <testcase classname="lumaTestCases.Registration" name="Register008_confirmPasswordDoesNotMatchPassword" time="1.466">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at lumaTestCases.Registration.Register008_confirmPasswordDoesNotMatchPassword(Registration.java:146)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Register008_confirmPasswordDoesNotMatchPassword -->
  <testcase classname="lumaTestCases.Registration" name="Regsiter001_registerUser" time="1.56">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at lumaTestCases.Registration.Regsiter001_registerUser(Registration.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Regsiter001_registerUser -->
  <testcase classname="lumaTestCases.Login" name="Login001_LoginWithValidCredentials" time="1.587">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at lumaTestCases.Login.Login001_LoginWithValidCredentials(Login.java:39)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- Login001_LoginWithValidCredentials -->
  <testcase classname="lumaTestCases.Login" name="Login002_LoginWithInvalidCredentials" time="7.184"/>
  <testcase classname="lumaTestCases.Login" name="Login003_valiDEmail_InvalidPass" time="7.306"/>
  <testcase classname="lumaTestCases.Login" name="Login004_invaliDEmail_validPassword" time="4.916"/>
  <testcase classname="lumaTestCases.Login" name="Login005_loginWithoutEmailAndPAssword" time="1.784"/>
  <testcase classname="lumaTestCases.Login" name="Login006_loginWithOnlyEmail" time="1.254"/>
  <testcase classname="lumaTestCases.Login" name="Login007_loginWithOnlyPassword" time="1.217"/>
  <testcase classname="lumaTestCases.SearchProduct" name="Search001_SearchByProduct" time="0.0">
    <skipped/>
  </testcase> <!-- Search001_SearchByProduct -->
  <testcase classname="lumaTestCases.SearchProduct" name="Search002_InvalidSearchProduct" time="0.0">
    <skipped/>
  </testcase> <!-- Search002_InvalidSearchProduct -->
  <testcase classname="lumaTestCases.Category" name="Category001_NavigateToWomenCategory" time="0.0">
    <skipped/>
  </testcase> <!-- Category001_NavigateToWomenCategory -->
  <testcase classname="lumaTestCases.Category" name="Category002_verifyMenTopsCategoryAvailability" time="0.0">
    <skipped/>
  </testcase> <!-- Category002_verifyMenTopsCategoryAvailability -->
  <testcase classname="lumaTestCases.Category" name="Category002_verifyWomenTopsCategoryAvailability" time="0.0">
    <skipped/>
  </testcase> <!-- Category002_verifyWomenTopsCategoryAvailability -->
  <testcase classname="lumaTestCases.Category" name="Category003_verifyWomenBottomsCategoryAvailability" time="0.0">
    <skipped/>
  </testcase> <!-- Category003_verifyWomenBottomsCategoryAvailability -->
  <testcase classname="lumaTestCases.Category" name="Category004_verifyMenBottomsCategoryAvailability" time="0.0">
    <skipped/>
  </testcase> <!-- Category004_verifyMenBottomsCategoryAvailability -->
</testsuite> <!-- Test -->
